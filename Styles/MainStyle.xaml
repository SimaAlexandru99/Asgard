<ResourceDictionary
    x:Class="Asgard.Styles.Window"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
    xmlns:local="clr-namespace:MaterialDesignThemes.Wpf;assembly=MaterialDesignThemes.Wpf">



    <!--  Start: Border Style  -->
    <Style x:Key="CardBorderStyle" TargetType="{x:Type Border}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="CornerRadius" Value="20" />
        <Setter Property="Height" Value="480" />
        <Setter Property="Width" Value="290" />
        <Setter Property="Padding" Value="30,40" />
    </Style>
    <!--  End: Border Style  -->

    <!--  Start: PrimaryButtonStyle  -->

    <Style x:Key="PrimaryButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{DynamicResource PrimaryVodafoneColor}" />
        <Setter Property="Foreground" Value="{DynamicResource ProTextColor}" />
        <Setter Property="Padding" Value="12,6" />
        <Setter Property="BorderThickness" Value="0" />
        <!--<Setter Property="MaxHeight" Value="40"/>
        <Setter Property="MinHeight" Value="40"/>-->
        <Setter Property="Width" Value="180" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        x:Name="btnBorder"
                        Width="{TemplateBinding Width}"
                        Padding="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="20">
                        <ContentPresenter
                            x:Name="ContentPresenter"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Focusable="False"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Height" Value="41" />
                            <Setter Property="Width" Value="182" />
                            <Setter TargetName="btnBorder" Property="CornerRadius" Value="21" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Height" Value="40" />
                            <Setter Property="Width" Value="180" />
                            <!--<Setter TargetName="btnBorder" Property="CornerRadius" Value="20"/>-->
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--  End: PrimaryButtonStyle  -->

    <Style x:Key="ToggleButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Background" Value="{DynamicResource SecundaryGrayColor}" />
        <Setter Property="BorderBrush" Value="{DynamicResource PrimaryGrayColor}" />
        <Setter Property="Height" Value="20" />
        <Setter Property="Width" Value="35" />
        <Setter Property="MaxHeight" Value="20" />
        <Setter Property="MaxWidth" Value="35" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid>
                        <Border
                            x:Name="Border"
                            Width="35"
                            Height="14"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Background="{TemplateBinding Background}"
                            CornerRadius="7">
                        </Border>
                        <Ellipse
                            x:Name="Ellipse"
                            Width="20"
                            Height="20"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center"
                            Fill="{DynamicResource ProTextColor}"
                            Stroke="{TemplateBinding BorderBrush}"
                            StrokeThickness="3">
                            <!--  Optional  -->
                            <Ellipse.Effect>
                                <DropShadowEffect Opacity=".2" ShadowDepth="0.5" />
                            </Ellipse.Effect>
                        </Ellipse>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!--  EventTrigger Checked  -->
                        <EventTrigger RoutedEvent="Checked">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation
                                        Storyboard.TargetName="Border"
                                        Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                        To="#C2D1FC"
                                        Duration="0:0:0.2" />
                                    <ThicknessAnimation
                                        Storyboard.TargetName="Ellipse"
                                        Storyboard.TargetProperty="Margin"
                                        To="15 0 0 0"
                                        Duration="0:0:0.2" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <!--  EventTrigger UnChecked  -->
                        <EventTrigger RoutedEvent="Unchecked">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation
                                        Storyboard.TargetName="Border"
                                        Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                        To="#CECECE"
                                        Duration="0:0:0.2" />
                                    <ThicknessAnimation
                                        Storyboard.TargetName="Ellipse"
                                        Storyboard.TargetProperty="Margin"
                                        To="0 0 0 0"
                                        Duration="0:0:0.2" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="Ellipse" Property="Fill" Value="{DynamicResource SecundaryBlueColor}" />
                            <Setter TargetName="Ellipse" Property="Stroke" Value="{DynamicResource BorderBrushColor}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--  End: ToggleButtonStyle  -->


    <!--  Start: Top Menu Text  -->
    <Style x:Key="TopMenuText" TargetType="MenuItem">
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                    <Border
                        x:Name="border"
                        Width="145"
                        Height="20"
                        Background="{DynamicResource BackgroundColor}"
                        BorderThickness="0">
                        <Grid>
                            <!--  // Text //  -->
                            <ContentPresenter
                                x:Name="TextHeader"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                ContentSource="Header"
                                TextBlock.FontFamily="/Fonts/#Rubik SemiBold"
                                TextBlock.FontSize="15"
                                TextBlock.Foreground="{DynamicResource TopMenuColor}" />

                            <!--  // Popup //  -->
                            <Popup
                                x:Name="PART_Popup"
                                AllowsTransparency="True"
                                IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}"
                                Placement="Bottom"
                                PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}">

                                <Border
                                    x:Name="SubMenuBorder"
                                    Background="{DynamicResource BackgroundColor}"
                                    BorderBrush="{DynamicResource BackgroundColor}">

                                    <ScrollViewer x:Name="SubMenuScrollViewer" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">

                                        <Grid RenderOptions.ClearTypeHint="Enabled">

                                            <Canvas HorizontalAlignment="Left" VerticalAlignment="Top" />

                                            <ItemsPresenter x:Name="ItemsPresenter" />

                                        </Grid>
                                    </ScrollViewer>
                                </Border>
                            </Popup>
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>

                        <Trigger Property="IsSuspendingPopupAnimation" Value="True">
                            <Setter TargetName="PART_Popup" Property="PopupAnimation" Value="None" />
                        </Trigger>
                        <Trigger Property="IsHighlighted" Value="True">
                            <Setter TargetName="TextHeader" Property="TextBlock.Foreground" Value="{DynamicResource TextColor}" />
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--  End: Top Menu Text  -->


    <!--  End: Top Menu Text  -->

    <!--  Start: Navigation Menu  -->
    <Style x:Key="NavigationMenu" TargetType="MenuItem">
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                    <Border
                        x:Name="border"
                        Width="50"
                        Background="Transparent"
                        BorderThickness="0">
                        <Grid>
                            <!--  // Text //  -->
                            <ContentPresenter
                                x:Name="TextHeader"
                                ContentSource="Header"
                                TextBlock.FontFamily="/Fonts/#Rubik SemiBold"
                                TextBlock.FontSize="12"
                                TextBlock.Foreground="White" />
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted" Value="True">
                            <Setter TargetName="TextHeader" Property="TextBlock.Foreground" Value="{DynamicResource FocusColor}" />
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--  End: Top Menu Text  -->

    <!--  Start: Top Menu Text 2  -->
    <Style x:Key="TopMenuText2" TargetType="MenuItem">
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                    <Border
                        x:Name="border"
                        Width="145"
                        Height="20"
                        Background="{DynamicResource BackgroundColor}"
                        BorderThickness="0">
                        <Grid>
                            <!--  // Text //  -->
                            <ContentPresenter
                                x:Name="TextHeader"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                ContentSource="Header"
                                TextBlock.FontFamily="/Fonts/#Rubik SemiBold"
                                TextBlock.FontSize="15"
                                TextBlock.Foreground="{DynamicResource TopMenuColor}" />

                            <!--  // Popup //  -->
                            <Popup
                                x:Name="PART_Popup"
                                AllowsTransparency="True"
                                IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}"
                                Placement="Bottom"
                                PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}">

                                <Border
                                    x:Name="SubMenuBorder"
                                    Background="{DynamicResource BackgroundColor}"
                                    BorderBrush="{DynamicResource BackgroundColor}">

                                    <ScrollViewer x:Name="SubMenuScrollViewer" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">

                                        <Grid RenderOptions.ClearTypeHint="Enabled">

                                            <Canvas HorizontalAlignment="Left" VerticalAlignment="Top" />

                                            <ItemsPresenter x:Name="ItemsPresenter" />

                                        </Grid>
                                    </ScrollViewer>
                                </Border>
                            </Popup>
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>

                        <Trigger Property="IsSuspendingPopupAnimation" Value="True">
                            <Setter TargetName="PART_Popup" Property="PopupAnimation" Value="None" />
                        </Trigger>
                        <Trigger Property="IsHighlighted" Value="True">
                            <Setter TargetName="TextHeader" Property="TextBlock.Foreground" Value="{DynamicResource TextColor}" />
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--  End: Top Menu Text  -->

    <!--  Start: Top Sub Menu Text  -->
    <Style x:Key="TopSubMenuText" TargetType="MenuItem">
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                    <Border
                        x:Name="border"
                        Width="135"
                        Background="{DynamicResource BackgroundColor}"
                        BorderThickness="0">
                        <Grid>

                            <!--  // Text //  -->
                            <ContentPresenter
                                x:Name="TextHeader"
                                Margin="0,20,0,0"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                ContentSource="Header"
                                TextBlock.FontFamily="/Fonts/#Rubik SemiBold"
                                TextBlock.FontSize="15"
                                TextBlock.Foreground="{DynamicResource TopMenuColor}" />

                            <Grid
                                x:Name="Highlighter"
                                Width="2"
                                Height="35"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                Background="{DynamicResource TextColor}"
                                Visibility="Collapsed" />

                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>

                        <Trigger Property="IsHighlighted" Value="True">
                            <Setter TargetName="TextHeader" Property="TextBlock.Foreground" Value="{DynamicResource TextColor}" />
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--  End: Top Sub Menu Text  -->

    <!--  Start: Top Sub Menu Text 2  -->
    <Style x:Key="TopSubMenuText2" TargetType="MenuItem">
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                    <Border
                        x:Name="border"
                        Width="200"
                        Background="{DynamicResource SecundaryBackgroundColor}"
                        BorderThickness="0">
                        <Grid>

                            <!--  // Text //  -->
                            <ContentPresenter
                                x:Name="TextHeader"
                                Margin="0,10,0,0"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                ContentSource="Header"
                                TextBlock.FontFamily="/Fonts/#Rubik SemiBold"
                                TextBlock.FontSize="15"
                                TextBlock.Foreground="{DynamicResource TopMenuColor}" />

                            <Grid
                                x:Name="Highlighter"
                                Width="2"
                                Height="35"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                Background="{DynamicResource TextColor}"
                                Visibility="Collapsed" />

                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>

                        <Trigger Property="IsHighlighted" Value="True">
                            <Setter TargetName="TextHeader" Property="TextBlock.Foreground" Value="{DynamicResource TextColor}" />
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--  End: Top Sub Menu Text  -->

    <!--  Start: Menu Buttons  -->
    <Style x:Key="MenuButton" TargetType="RadioButton">
        <!--  Normal button style  -->
        <Setter Property="Height" Value="60" />
        <Setter Property="Width" Value="auto" />
        <Setter Property="Margin" Value="0,5,10,0" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="FontFamily" Value="/Fonts/#Rubik Semibold" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Foreground" Value="{DynamicResource SecondaryTextColor}" />
        <Setter Property="BorderBrush" Value="White" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="0,0,0,0"
                        CornerRadius="5">
                        <ContentPresenter HorizontalAlignment="Left" VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <!--  Button Style on hover  -->
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource HoverBackgroundColor}" />
                <Setter Property="Foreground" Value="{DynamicResource SecondaryTextColor}" />
                <Setter Property="Cursor" Value="Hand" />
                <Setter Property="BorderBrush" Value="{Binding Path=Tag, RelativeSource={RelativeSource Self}}" />
            </Trigger>
            <!--  Activated button style  -->
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Background" Value="{StaticResource SecundaryBackgroundColor}" />
                <Setter Property="Foreground" Value="{StaticResource SecondaryTextColor}" />
                <Setter Property="BorderBrush" Value="{Binding Path=Tag, RelativeSource={RelativeSource Self}}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--  End: Menu Buttons  -->

    <!--  Start: Menu Buttons  -->
    <Style x:Key="SlideshowButton" TargetType="RadioButton">
        <!--  Normal button style  -->
        <Setter Property="Height" Value="76" />
        <Setter Property="MinWidth" Value="201" />
        <Setter Property="Margin" Value="0,0,10,0" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="FontFamily" Value="/Fonts/#Rubik Semibold" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Foreground" Value="{DynamicResource TextColor}" />
        <Setter Property="BorderBrush" Value="White" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="0,0,0,0"
                        CornerRadius="10">
                        <ContentPresenter HorizontalAlignment="Left" VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <!--  Button Style on hover  -->
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource SlideshowButtonColor}" />
                <Setter Property="Foreground" Value="{DynamicResource TextColor}" />
                <Setter Property="Cursor" Value="Hand" />
                <Setter Property="BorderBrush" Value="{Binding Path=Tag, RelativeSource={RelativeSource Self}}" />
            </Trigger>
            <!--  Activated button style  -->
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Background" Value="{StaticResource SlideshowButtonColor}" />
                <Setter Property="Foreground" Value="{StaticResource TextColor}" />
                <Setter Property="BorderBrush" Value="{Binding Path=Tag, RelativeSource={RelativeSource Self}}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--  End: Menu Buttons  -->

    <!--  Start: Menu Buttons Text  -->
    <Style x:Key="MenuButtonText" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=RadioButton}}" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Margin" Value="15,0,0,0" />
        <Setter Property="FontSize" Value="15"/>
    </Style>
    <!--  End: Menu Buttons Text  -->

    <!--  Start: Menu Buttons Icon  -->
    <Style x:Key="MenuButtonIcon" TargetType="iconPacks:PackIconBoxIcons">
        <Setter Property="Foreground" Value="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=RadioButton}}" />
    </Style>
    <Style x:Key="MenuButtonIcon2" TargetType="iconPacks:PackIconFontAwesome">
        <Setter Property="Foreground" Value="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=RadioButton}}" />
    </Style>
    <Style x:Key="MenuButtonIcon3" TargetType="iconPacks:PackIconMaterialDesign">
        <Setter Property="Foreground" Value="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=RadioButton}}" />
    </Style>
    <!--  End: Menu Buttons Icon  -->

    <!--  Start: Profile Button  -->
    <Style x:Key="ProfileButton" TargetType="RadioButton">
        <!--  Normal button style  -->
        <Setter Property="Height" Value="50" />
        <Setter Property="Width" Value="50" />
        <Setter Property="Margin" Value="0,5,10,0" />
        <Setter Property="Background" Value="{DynamicResource BackgroundElementsTopColor}" />
        <Setter Property="FontFamily" Value="/Fonts/#Rubik Semibold" />
        <Setter Property="FontStyle" Value="Oblique" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Foreground" Value="{DynamicResource LeftMenuColor}" />
        <Setter Property="BorderBrush" Value="{DynamicResource SecundaryBackgroundColor}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="1"
                        CornerRadius="30">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <!--  Button Style on hover  -->
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource HoverBackgroundColor}" />
                <Setter Property="Foreground" Value="{DynamicResource TextColor}" />
                <Setter Property="Cursor" Value="Hand" />

            </Trigger>
            <!--  Activated button style  -->
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource SecundaryBackgroundColor}" />
                <Setter Property="Foreground" Value="{StaticResource TextColor}" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="BorderBrush" Value="White" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--  End: Profile Button  -->



    <!--  Start: Profile Button  -->
    <Style x:Key="OrdersButton" TargetType="RadioButton">
        <!--  Normal button style  -->
        <Setter Property="Height" Value="50" />
        <Setter Property="Width" Value="100" />
        <Setter Property="Margin" Value="0,5,10,0" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="FontFamily" Value="/Fonts/#Rubik Semibold" />
        <Setter Property="FontStyle" Value="Oblique" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Foreground" Value="{DynamicResource LeftMenuColor}" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="1"
                        CornerRadius="25">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <!--  Button Style on hover  -->
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource TextColor}" />
                <Setter Property="Cursor" Value="Hand" />

            </Trigger>
            <!--  Activated button style  -->
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Foreground" Value="{StaticResource TextColor}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--  End: Profile Button  -->

    <!--  Error Template  -->
    <ControlTemplate x:Key="errorTemplate">
        <Border
            BorderBrush="OrangeRed"
            BorderThickness="2"
            CornerRadius="5">
            <Grid>
                <AdornedElementPlaceholder />
                <TextBlock
                    Margin="0,0,4,0"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Center"
                    FontFamily="/Fonts/#Rubik Regular"
                    FontSize="8"
                    Foreground="OrangeRed"
                    Text="{Binding [0].ErrorContent}" />
            </Grid>
        </Border>
    </ControlTemplate>

    <!--  UpperText  -->
    <Style x:Key="upperText" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{DynamicResource OrderTextColor}" />
        <Setter Property="FontSize" Value="10" />
        <Setter Property="FontFamily" Value="/Fonts/#Rubik Semibold" />
    </Style>

    <!--Title Gestiune-->
    <Style x:Key="gestiuneTitle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{DynamicResource OrderTextColor}" />
        <Setter Property="FontSize" Value="20" />
        <Setter Property="FontFamily" Value="/Fonts/#Rubik Bold" />
    </Style>

    <!--  TextboxForm  -->
    <Style x:Key="TextBoxForm" TargetType="TextBox">
        <Setter Property="Padding" Value="15,0,0,0" />
        <Setter Property="Margin" Value="0,5,0,0" />
        <Setter Property="FontSize" Value="10" />
        <Setter Property="MinHeight" Value="25" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="FontSize" Value="9" />
        <Setter Property="MinWidth" Value="100" />
        <Setter Property="FontFamily" Value="/Fonts/#Rubik Regular" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border
                        x:Name="border"
                        Background="{DynamicResource OrderBorderItemsColor}"
                        BorderThickness="0"
                        CornerRadius="5">
                        <ScrollViewer
                            x:Name="PART_ContentHost"
                            Focusable="false"
                            HorizontalScrollBarVisibility="Hidden"
                            VerticalScrollBarVisibility="Hidden" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Foreground" Value="{DynamicResource OrderTextColor}" />
                            <Setter Property="FontWeight" Value="Bold" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="true">
                            <Setter Property="Foreground" Value="{DynamicResource OrderTextColor}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="comboBoxOrder" TargetType="ComboBox">
        <Setter Property="Height" Value="25" />
        <Setter Property="Margin" Value="0,5,0,0" />
        <Setter Property="Padding" Value="4,5,10,0" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Border
                        x:Name="border"
                        Background="{DynamicResource OrderBackgroundColor}"
                        BorderBrush="{DynamicResource OrderBorderColor}"
                        BorderThickness="1.5"
                        CornerRadius="5">
                        <ScrollViewer
                            x:Name="PART_ContentHost"
                            Focusable="false"
                            HorizontalScrollBarVisibility="Hidden"
                            VerticalScrollBarVisibility="Hidden" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource OrderBorderGreyColor}" />
                            <Setter Property="Foreground" Value="{DynamicResource OrderFocusTextColor}" />
                            <Setter Property="FontWeight" Value="Bold" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="true">
                            <Setter Property="Foreground" Value="{DynamicResource OrderFocusTextColor}" />
                            <Setter TargetName="border" Property="BorderBrush" Value="black" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>


    </Style>

    <!--Trimite Comanda-->
    <Style x:Key="orderButton" TargetType="Button">
        <Setter Property="Background" Value="{DynamicResource ButtonOrderBackground}" />
        <Setter Property="Foreground" Value="{DynamicResource ButtonOrderText}" />
        <Setter Property="Width" Value="180" />
        <Setter Property="Height" Value="50" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="FontFamily" Value="/Fonts/#Rubik Bold" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" CornerRadius="7">
                        <ContentPresenter
                            Margin="0,0,0,1"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <!--  Button Style on hover  -->
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource HoverBackgroundColor}" />
                <Setter Property="Foreground" Value="{DynamicResource TextColor}" />
                <Setter Property="Cursor" Value="Hand" />
                <Setter Property="BorderBrush" Value="{Binding Path=Tag, RelativeSource={RelativeSource Self}}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--Adauga Produs Gestiune-->
    <Style x:Key="addButton" TargetType="Button">
        <Setter Property="Background" Value="{DynamicResource FocusColor}" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="Width" Value="170" />
        <Setter Property="Height" Value="50" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="FontFamily" Value="/Fonts/#Rubik Bold" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" CornerRadius="5">
                        <ContentPresenter
                            Margin="0,0,0,0"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <!--  Button Style on hover  -->
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="Black" />
                <Setter Property="Foreground" Value="{DynamicResource FocusColor}" />
                <Setter Property="Cursor" Value="Hand" />
                <Setter Property="BorderBrush" Value="{Binding Path=Tag, RelativeSource={RelativeSource Self}}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="moreinfoButton" TargetType="Button">
        <Setter Property="Background" Value="{DynamicResource ButtonAddBackgroundHoverActive}" />
        <Setter Property="Foreground" Value="{DynamicResource ButtonAddTextHoverActive}" />
        <Setter Property="Width" Value="120" />
        <Setter Property="Height" Value="25" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="FontSize" Value="8" />
        <Setter Property="FontFamily" Value="/Fonts/#Rubik Regular" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" CornerRadius="5">
                        <ContentPresenter
                            Margin="0,0,0,1"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <!--  Button Style on hover  -->
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource HoverBackgroundColor}" />
                <Setter Property="Foreground" Value="{DynamicResource TextColor}" />
                <Setter Property="Cursor" Value="Hand" />
                <Setter Property="BorderBrush" Value="{Binding Path=Tag, RelativeSource={RelativeSource Self}}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ButtonTab" TargetType="Button">
        <Setter Property="FontSize" Value="10" />
        <Setter Property="FontFamily" Value="/Fonts/#Rubik Semibold" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Width" Value="80" />
        <Setter Property="Height" Value="50" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="Transparent" BorderThickness="0">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="White"/>
                <Setter Property="Foreground" Value="Black"/>
                <Setter Property="Cursor" Value="Hand"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--SEARCH BOX Gestiune-->
    <Style x:Key="SearchBar" TargetType="TextBox">
        <Setter Property="Foreground" Value="{DynamicResource OrderTextColor}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
    </Style>

    <Style x:Key="SearchBarBorder" TargetType="Border">
        <Setter Property="Background" Value="{DynamicResource SearchBackground}"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="CornerRadius" Value="5"/>
        <Setter Property="Width" Value="170"/>
        <Setter Property="Padding" Value="4"/>
        <Setter Property="BorderThickness" Value="0"/>
    </Style>


    <!--Popup Style-->
    <Style x:Key="TextPopup" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{DynamicResource TextColor}"/>
        <Setter Property="FontFamily" Value="/Fonts/#Rubik Semibold"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Background" Value="Transparent"/>
    </Style>

    <Style x:Key="BorderItems" TargetType="Border">
        <Setter Property="Background" Value="{DynamicResource PopupBorderItems}"/>
        <Setter Property="CornerRadius" Value="5"/>
        <Setter Property="Width" Value="150"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="4"/>
    </Style>

    <Style x:Key="ButtonPopup" TargetType="Button">
        <Setter Property="Background" Value="{DynamicResource FocusColor}"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="FontFamily" Value="/Fonts/#Rubik Bold"/>
        <Setter Property="FontSize" Value="8"/>
        <Setter Property="Width" Value="70"/>
        <Setter Property="Height" Value="35"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" CornerRadius="5">
                        <ContentPresenter
                            Margin="0,0,0,0"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <!--  Button Style on hover  -->
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="Black" />
                <Setter Property="Foreground" Value="{DynamicResource FocusColor}" />
                <Setter Property="Cursor" Value="Hand" />
                <Setter Property="BorderBrush" Value="{Binding Path=Tag, RelativeSource={RelativeSource Self}}" />
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="Background" Value="Black" />
                <Setter Property="Foreground" Value="{DynamicResource FocusColor}" />
                <Setter Property="Cursor" Value="Hand" />
                <Setter Property="BorderBrush" Value="{Binding Path=Tag, RelativeSource={RelativeSource Self}}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="CloseNotification" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource CustomMessagesForeground}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="FontFamily" Value="/Fonts/#Rubik regular"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" CornerRadius="5">
                        <ContentPresenter
                            Margin="0,0,0,0"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <!--  Button Style on hover  -->
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource CustomMessagesBackground}"/>
                <Setter Property="Foreground" Value="{DynamicResource CustomMessagesForeground}" />
                <Setter Property="Cursor" Value="Hand" />
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="Background" Value="{DynamicResource CustomMessagesBackground}" />
                <Setter Property="Foreground" Value="{DynamicResource CustomMessagesForeground}" />
                <Setter Property="Cursor" Value="Hand" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource CustomMessagesBackground}" />
                <Setter Property="Foreground" Value="{DynamicResource CustomMessagesForeground}" />
                <Setter Property="Cursor" Value="Hand" />
            </Trigger>
        </Style.Triggers>
    </Style>


    <!-- NEW INTERFACE -->



    <!--Trimite Ticket IT-->
    <Style x:Key="TicketITButton" TargetType="Button">
        <Setter Property="Background" Value="{DynamicResource ButtonITBackground}" />
        <Setter Property="Foreground" Value="{DynamicResource ButtonITForeground}" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="FontFamily" Value="/Fonts/#Rubik Bold" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" CornerRadius="15">
                        <ContentPresenter
                            Margin="0,0,0,1"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <!--  Button Style on hover  -->
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource ButtonITOverBackground}" />
                <Setter Property="Foreground" Value="{DynamicResource ButtonITOverForeground}" />
                <Setter Property="Cursor" Value="Hand" />
                <Setter Property="BorderBrush" Value="{Binding Path=Tag, RelativeSource={RelativeSource Self}}" />
            </Trigger>
        </Style.Triggers>
    </Style>



    <!--Accent Button 2-->
    <Style x:Key="AccentButton2" TargetType="Button">
        <Setter Property="Background" Value="{DynamicResource FocusColor}" />
        <Setter Property="Foreground" Value="{DynamicResource ButtonITForeground}" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="FontFamily" Value="/Fonts/#Rubik Bold" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" CornerRadius="5">
                        <ContentPresenter
                            Margin="0,0,0,1"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <!--  Button Style on hover  -->
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource ButtonITForeground}" />
                <Setter Property="Foreground" Value="{DynamicResource FocusColor}" />
                <Setter Property="Cursor" Value="Hand" />
                <Setter Property="BorderBrush" Value="{Binding Path=Tag, RelativeSource={RelativeSource Self}}" />
            </Trigger>
        </Style.Triggers>
    </Style>



    <!--Telekom Button-->
    <Style x:Key="TelekomButton" TargetType="Button">
        <Setter Property="Background" Value="{DynamicResource TelekomBackgroundColor}" />
        <Setter Property="Foreground" Value="{DynamicResource VodafoneForegroundColor}" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="FontFamily" Value="/Fonts/#Rubik Semibold" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" CornerRadius="5">
                        <ContentPresenter
                            Margin="0,0,0,1"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <!--  Button Style on hover  -->
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource VodafoneForegroundColor}" />
                <Setter Property="Foreground" Value="{DynamicResource TelekomBackgroundColor}" />
                <Setter Property="Cursor" Value="Hand" />
                <Setter Property="BorderBrush" Value="{Binding Path=Tag, RelativeSource={RelativeSource Self}}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--Error Button-->
    <Style x:Key="ErrorButton" TargetType="Button">
        <Setter Property="Background" Value="#DF3E30" />
        <Setter Property="Foreground" Value="{DynamicResource VodafoneForegroundColor}" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="FontFamily" Value="/Fonts/#Rubik Semibold" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" CornerRadius="5">
                        <ContentPresenter
                            Margin="0,0,0,1"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <!--  Button Style on hover  -->
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource VodafoneForegroundColor}" />
                <Setter Property="Foreground" Value="#DF3E30" />
                <Setter Property="Cursor" Value="Hand" />
                <Setter Property="BorderBrush" Value="{Binding Path=Tag, RelativeSource={RelativeSource Self}}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--Succes Button-->
    <Style x:Key="SuccesButton" TargetType="Button">
        <Setter Property="Background" Value="#71BE34" />
        <Setter Property="Foreground" Value="{DynamicResource VodafoneForegroundColor}" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="FontFamily" Value="/Fonts/#Rubik Semibold" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" CornerRadius="5">
                        <ContentPresenter
                            Margin="0,0,0,1"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <!--  Button Style on hover  -->
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource VodafoneForegroundColor}" />
                <Setter Property="Foreground" Value="#71BE34" />
                <Setter Property="Cursor" Value="Hand" />
                <Setter Property="BorderBrush" Value="{Binding Path=Tag, RelativeSource={RelativeSource Self}}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--Telekom Button-->
    <Style x:Key="TextNavigation" TargetType="Button">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{DynamicResource VodafoneForegroundColor}" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="FontFamily" Value="/Fonts/#Rubik Semibold" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="BorderThickness" Value="0"/>
        <Style.Triggers>
            <!--  Button Style on hover  -->
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Foreground" Value="{DynamicResource FocusColor}" />
                <Setter Property="Cursor" Value="Hand" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--Optima Button-->
    <Style x:Key="OptimaButton" TargetType="Button">
        <Setter Property="Background" Value="{DynamicResource OptimaBackgroundColor}" />
        <Setter Property="Foreground" Value="{DynamicResource OptimaForegroundColor}" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="FontFamily" Value="/Fonts/#Rubik Semibold" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" CornerRadius="5">
                        <ContentPresenter
                            Margin="0,0,0,1"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <!--  Button Style on hover  -->
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource OptimaForegroundColor}" />
                <Setter Property="Foreground" Value="{DynamicResource OptimaBackgroundColor}" />
                <Setter Property="Cursor" Value="Hand" />
                <Setter Property="BorderBrush" Value="{Binding Path=Tag, RelativeSource={RelativeSource Self}}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--  TextboxForm  -->
    <Style x:Key="TextBoxCustom" TargetType="TextBox">
        <Setter Property="Margin" Value="0,5,0,0" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="CaretBrush" Value="White" />
        <Setter Property="Foreground" Value="{DynamicResource TextColor}"/>
        <Setter Property="FontFamily" Value="/Fonts/#Rubik Regular" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Height" Value="40" />
        <Setter Property="Padding" Value="10 0 0 0" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="{DynamicResource TextColor}" />

        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Border Name="border"
                        Background="Transparent"
                        BorderBrush="{DynamicResource TextColor}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Padding="10 0 0 0"
                        CornerRadius="5">
                        <ScrollViewer x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="White" />
                            <Setter Property="Foreground" Value="White"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="White" />
                            <Setter Property="Foreground" Value="White"/>

                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="White"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SearchBox" TargetType="TextBox">
        <Setter Property="Margin" Value="0,5,0,0" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="CaretBrush" Value="White" />
        <Setter Property="Foreground" Value="{DynamicResource TextColor}"/>
        <Setter Property="FontFamily" Value="/Fonts/#Rubik Regular" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Height" Value="40" />
        <Setter Property="Width" Value="200" />
        <Setter Property="Padding" Value="10 0 0 0" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="{DynamicResource TextColor}" />

        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Border Name="border"
                        Background="Transparent"
                        BorderBrush="{DynamicResource TextColor}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Padding="10 0 0 0"
                        CornerRadius="5">
                        <ScrollViewer x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="White" />
                            <Setter Property="Foreground" Value="White"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="White" />
                            <Setter Property="Foreground" Value="White"/>

                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="White"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Accent Button-->
    <Style x:Key="SendButton" TargetType="Button">
        <Setter Property="Background" Value="{DynamicResource FocusColor}" />
        <Setter Property="Foreground" Value="{DynamicResource TextColor}" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="FontFamily" Value="/Fonts/#Rubik Bold" />
        <Setter Property="Height" Value="50" />
        <Setter Property="FontSize" Value="15" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" CornerRadius="5">
                        <ContentPresenter
                            Margin="0,0,0,1"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <!--  Button Style on hover  -->
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource ButtonITForeground}" />
                <Setter Property="Foreground" Value="{DynamicResource FocusColor}" />
                <Setter Property="Cursor" Value="Hand" />
                <Setter Property="BorderBrush" Value="{Binding Path=Tag, RelativeSource={RelativeSource Self}}" />
            </Trigger>
        </Style.Triggers>
    </Style>




</ResourceDictionary>