<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <!--  Start: Navigation Buttons  -->
    <Style x:Key="NavigationButton" TargetType="RadioButton">
        <!--  Normal button style  -->
        <Setter Property="MinHeight" Value="70" />
        <Setter Property="MaxHeight" Value="250" />
        <Setter Property="Width" Value="auto" />
        <Setter Property="Margin" Value="0 0 0 0"/>
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="FontFamily" Value="/Fonts/#Rubik Semibold" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Foreground" Value="{DynamicResource TextColor}" />
        <Setter Property="BorderBrush" Value="White" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="0,0,0,0"
                        CornerRadius="0">
                        <ContentPresenter HorizontalAlignment="Left" VerticalAlignment="Stretch"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <!--  Button Style on hover  -->
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource FocusHoverColor}" />
                <Setter Property="Foreground" Value="{DynamicResource SecondaryTextColor}" />
                <Setter Property="Cursor" Value="Hand" />
                <Setter Property="BorderBrush" Value="{Binding Path=Tag, RelativeSource={RelativeSource Self}}" />
            </Trigger>
            <!--  Activated button style  -->
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Background" Value="{StaticResource FocusColor}" />
                <Setter Property="Foreground" Value="{StaticResource SecondaryTextColor}" />
                <Setter Property="BorderBrush" Value="{Binding Path=Tag, RelativeSource={RelativeSource Self}}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--  End: Menu Buttons  -->


    <!--  Start: Navigation Buttons  -->
    <Style x:Key="SelectedButton" TargetType="RadioButton">
        <!-- Normal button style -->
        <Setter Property="Height" Value="50" />
        <Setter Property="Width" Value="300" />
        <Setter Property="Margin" Value="0 0 0 0"/>
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="FontFamily" Value="/Fonts/#Rubik Semibold" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Foreground" Value="{DynamicResource TextColor}" />
        <Setter Property="BorderBrush" Value="#686868" />
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Border x:Name="border"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    CornerRadius="5">
                        <ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!-- Button Style on hover -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="Transparent" />
                            <Setter TargetName="border" Property="Cursor" Value="Hand" />
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource FocusColor}" />
                            <Setter TargetName="border" Property="BorderThickness" Value="2"/>
                        </Trigger>
                        <!-- Activated button style -->
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="border" Property="Background" Value="Transparent" />
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource FocusColor}" />
                            <Setter TargetName="border" Property="BorderThickness" Value="2"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  End: Menu Buttons  -->

    <!--  Start: Menu Buttons Text  -->
    <Style x:Key="MenuButtonText" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=RadioButton}}" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Margin" Value="15,0,0,0" />
        <Setter Property="FontSize" Value="15"/>
    </Style>
    <!--  End: Menu Buttons Text  -->

    <!--  Start: Profile Button  -->
    <Style x:Key="SocialMediaButton" TargetType="RadioButton">
        <!--  Normal button style  -->
        <Setter Property="Height" Value="50" />
        <Setter Property="Width" Value="50" />
        <Setter Property="Margin" Value="0,5,10,0" />
        <Setter Property="Background" Value="{DynamicResource FocusColor}" />
        <Setter Property="FontFamily" Value="/Fonts/#Rubik Semibold" />
        <Setter Property="FontStyle" Value="Oblique" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Foreground" Value="{DynamicResource TextColor}" />
        <Setter Property="BorderBrush" Value="{DynamicResource FocusBorderColor}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="0.5"
                        CornerRadius="25">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <!--  Button Style on hover  -->
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource FocusHoverColor}" />
                <Setter Property="Foreground" Value="{DynamicResource TextColor}" />
                <Setter Property="Cursor" Value="Hand" />

            </Trigger>
            <!--  Activated button style  -->
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource FocusHoverColor}" />
                <Setter Property="Foreground" Value="{StaticResource TextColor}" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="BorderBrush" Value="White" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--  End: Profile Button  -->


    <!--  Start: Profile Menu  -->
    <Style x:Key="ProfileMenu" TargetType="MenuItem">
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                    <Border
                        x:Name="border"
                        Width="200"
                        Height="20"
                        Margin="0,0,0,10"
                        Background="Transparent"
                        BorderThickness="0">
                        <Grid>
                            <!--  // Text //  -->
                            <ContentPresenter
                                x:Name="TextHeader"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                ContentSource="Header"
                                TextBlock.FontFamily="/Fonts/#Rubik SemiBold"
                                TextBlock.FontSize="12"
                                TextBlock.Foreground="{DynamicResource TextMenuColor}" />
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted" Value="True">
                            <Setter TargetName="TextHeader" Property="TextBlock.Foreground" Value="{DynamicResource SecondaryTextColor}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <!--  Button Style on hover  -->
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource TextColor}" />
                <Setter Property="Cursor" Value="Hand" />

            </Trigger>
            <!--  Activated button style  -->
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Foreground" Value="{StaticResource TextColor}" />
            </Trigger>
        </Style.Triggers>
    </Style>


    <!--Vodafone Button-->
    <Style x:Key="VodafoneButton" TargetType="Button">
        <Setter Property="Background" Value="{DynamicResource VodafoneBackgroundColor}" />
        <Setter Property="Foreground" Value="{DynamicResource SecondaryTextColor}" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="FontFamily" Value="/Fonts/#Rubik Semibold" />
        <Setter Property="FontSize" Value="10" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" CornerRadius="5">
                        <ContentPresenter
                            Margin="0,0,0,1"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <!--  Button Style on hover  -->
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource VodafoneSecondBackgroundColor}" />
                <Setter Property="Foreground" Value="{DynamicResource SecondaryTextColor}" />
                <Setter Property="Cursor" Value="Hand" />
                <Setter Property="BorderBrush" Value="{Binding Path=Tag, RelativeSource={RelativeSource Self}}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--Orange Button-->
    <Style x:Key="OrangeButton" TargetType="Button">
        <Setter Property="Background" Value="{DynamicResource OrangeBackgroundColor}" />
        <Setter Property="Foreground" Value="{DynamicResource SecondaryTextColor}" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="FontFamily" Value="/Fonts/#Rubik Semibold" />
        <Setter Property="FontSize" Value="10" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" CornerRadius="5">
                        <ContentPresenter
                            Margin="0,0,0,1"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <!--  Button Style on hover  -->
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource SecondaryTextColor}" />
                <Setter Property="Foreground" Value="{DynamicResource OrangeBackgroundColor}" />
                <Setter Property="Cursor" Value="Hand" />
                <Setter Property="BorderBrush" Value="{Binding Path=Tag, RelativeSource={RelativeSource Self}}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--Telekom Button-->
    <Style x:Key="TelekomButton" TargetType="Button">
        <Setter Property="Background" Value="{DynamicResource TelekomBackgroundColor}" />
        <Setter Property="Foreground" Value="{DynamicResource SecondaryTextColor}" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="FontFamily" Value="/Fonts/#Rubik Semibold" />
        <Setter Property="FontSize" Value="10" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" CornerRadius="5">
                        <ContentPresenter
                            Margin="0,0,0,1"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <!--  Button Style on hover  -->
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource SecondaryTextColor}" />
                <Setter Property="Foreground" Value="{DynamicResource TelekomBackgroundColor}" />
                <Setter Property="Cursor" Value="Hand" />
                <Setter Property="BorderBrush" Value="{Binding Path=Tag, RelativeSource={RelativeSource Self}}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--Telekom Button-->
    <Style x:Key="CECButton" TargetType="Button">
        <Setter Property="Background" Value="{DynamicResource CECBackgroundColor}" />
        <Setter Property="Foreground" Value="{DynamicResource CECSecondaryBackgroundColor}" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="FontFamily" Value="/Fonts/#Rubik Semibold" />
        <Setter Property="FontSize" Value="10" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" CornerRadius="5">
                        <ContentPresenter
                            Margin="0,0,0,1"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <!--  Button Style on hover  -->
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource CECSecondaryBackgroundColor}" />
                <Setter Property="Foreground" Value="{DynamicResource CECBackgroundColor}" />
                <Setter Property="Cursor" Value="Hand" />
                <Setter Property="BorderBrush" Value="{Binding Path=Tag, RelativeSource={RelativeSource Self}}" />
            </Trigger>
        </Style.Triggers>
    </Style>


    <!--Accent Button-->
    <Style x:Key="ButtonBanner" TargetType="Button">
        <Setter Property="Background" Value="{DynamicResource FocusColor}" />
        <Setter Property="Foreground" Value="{DynamicResource SecondaryTextColor}" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="FontSize" Value="10" />
        <Setter Property="FontFamily" Value="/Fonts/#Rubik Regular" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" CornerRadius="15">
                        <ContentPresenter
                            Margin="0,0,0,1"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <!--  Button Style on hover  -->
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource FocusHoverColor}" />
                <Setter Property="Foreground" Value="{DynamicResource SecondaryTextColor}" />
                <Setter Property="Cursor" Value="Hand" />
                <Setter Property="BorderBrush" Value="{Binding Path=Tag, RelativeSource={RelativeSource Self}}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--Border Items-->
    <Style x:Key="BorderItems" TargetType="Border">
        <Setter Property="Background" Value="{DynamicResource BackgroundThirdColor}" />
        <Setter Property="BorderBrush" Value="{DynamicResource FocusBorderColor}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="CornerRadius" Value="10"/>
    </Style>



    <!--  Start: Navigation Menu  -->
    <Style x:Key="NavigationMenu" TargetType="MenuItem">
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                    <Border
                        x:Name="border"
                        Width="50"
                        Background="Transparent"
                        BorderThickness="0">
                        <Grid>
                            <!--  // Text //  -->
                            <ContentPresenter
                                x:Name="TextHeader"
                                ContentSource="Header"
                                TextBlock.FontFamily="/Fonts/#Rubik SemiBold"
                                TextBlock.FontSize="12"
                                TextBlock.Foreground="{DynamicResource TextColor}" />
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted" Value="True">
                            <Setter TargetName="TextHeader" Property="TextBlock.Foreground" Value="{DynamicResource FocusHoverColor}" />
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SendButton" TargetType="Button">
        <Setter Property="Background" Value="{DynamicResource FocusColor}" />
        <Setter Property="Foreground" Value="{DynamicResource SecondaryTextColor}" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="FontFamily" Value="/Fonts/#Rubik Bold" />
        <Setter Property="Height" Value="50" />
        <Setter Property="FontSize" Value="15" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" CornerRadius="5">
                        <ContentPresenter
                            Margin="0,0,0,1"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <!--  Button Style on hover  -->
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource FocusHoverColor}" />
                <Setter Property="Foreground" Value="{DynamicResource SecondaryTextColor}" />
                <Setter Property="Cursor" Value="Hand" />
                <Setter Property="BorderBrush" Value="{Binding Path=Tag, RelativeSource={RelativeSource Self}}" />
            </Trigger>
        </Style.Triggers>
    </Style>


    <!--  TextboxForm  -->
    <Style x:Key="TextBoxCustom" TargetType="TextBox">
        <Setter Property="Margin" Value="0,5,0,0"/>
        <Setter Property="Background" Value="{DynamicResource InputColor}"/>
        <Setter Property="CaretBrush" Value="{DynamicResource TextColor}"/>
        <Setter Property="Foreground" Value="{DynamicResource TextColor}"/>
        <Setter Property="FontFamily" Value="/Fonts/#Rubik Regular"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Height" Value="50"/>
        <Setter Property="Padding" Value="10"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="BorderBrush" Value="{DynamicResource TextColor}"/>

        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Border Name="border"
                        Background="{DynamicResource InputColor}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Padding="10"
                        CornerRadius="2">
                        <ScrollViewer x:Name="PART_ContentHost"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                  HorizontalScrollBarVisibility="Auto"
                                  VerticalScrollBarVisibility="Auto"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource FocusBorderColor}"/>
                            <Setter Property="Foreground" Value="{DynamicResource TextColor}"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource FocusBorderColor}"/>
                            <Setter Property="Foreground" Value="{DynamicResource TextColor}"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource FocusBorderColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>








    <!--Popup Style-->
    <Style x:Key="TextPopup" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{DynamicResource TextColor}"/>
        <Setter Property="FontFamily" Value="/Fonts/#Rubik Semibold"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Background" Value="Transparent"/>
    </Style>



    <Style x:Key="CloseNotification" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource TextColor}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="FontFamily" Value="/Fonts/#Rubik regular"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" CornerRadius="5">
                        <ContentPresenter
                            Margin="0,0,0,0"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <!--  Button Style on hover  -->
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource BackgroundColor}"/>
                <Setter Property="Foreground" Value="{DynamicResource TextColor}" />
                <Setter Property="Cursor" Value="Hand" />
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="Background" Value="{DynamicResource BackgroundColor}" />
                <Setter Property="Foreground" Value="{DynamicResource TextColor}" />
                <Setter Property="Cursor" Value="Hand" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource BackgroundColor}" />
                <Setter Property="Foreground" Value="{DynamicResource TextColor}" />
                <Setter Property="Cursor" Value="Hand" />
            </Trigger>
        </Style.Triggers>
    </Style>



    <!--  Error Template  -->
    <ControlTemplate x:Key="errorTemplate">
        <Border
            BorderBrush="OrangeRed"
            BorderThickness="2"
            CornerRadius="5">
            <Grid>
                <AdornedElementPlaceholder />
                <TextBlock
                    Margin="0,0,4,0"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Center"
                    FontFamily="/Fonts/#Rubik Regular"
                    FontSize="8"
                    Foreground="OrangeRed"
                    Text="{Binding [0].ErrorContent}" />
            </Grid>
        </Border>
    </ControlTemplate>




    <Style x:Key="LoginForm" TargetType="{x:Type TextBox}">
        <Setter Property="Margin" Value="0,5,0,0" />
        <Setter Property="Background" Value="{DynamicResource InputText}" />
        <Setter Property="CaretBrush" Value="{DynamicResource TextColor}"/>
        <Setter Property="Foreground" Value="{DynamicResource TextColor}"/>
        <Setter Property="FontFamily" Value="/Fonts/#Rubik Regular" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Height" Value="30"/>
        <Setter Property="Padding" Value="10 0 0 0" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="BorderBrush" Value="{DynamicResource TextColor}" />

        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Border Name="border"
                        Background="{DynamicResource InputText}"
                        BorderThickness="1"
                        Padding="10 0 0 0"
                         MinHeight="30"
                            MaxHeight="50"
                        CornerRadius="5">
                        <ScrollViewer x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource FocusColor}" />
                            <Setter Property="Foreground" Value="{DynamicResource TextColor}"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource FocusColor}" />
                            <Setter Property="Foreground" Value="{DynamicResource TextColor}"/>

                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource FocusColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="PasswordForm" TargetType="{x:Type PasswordBox}">
        <Setter Property="Margin" Value="0,5,0,0" />
        <Setter Property="Background" Value="{DynamicResource InputText}" />
        <Setter Property="CaretBrush" Value="{DynamicResource TextColor}"/>
        <Setter Property="Foreground" Value="{DynamicResource TextColor}"/>
        <Setter Property="FontFamily" Value="/Fonts/#Rubik Regular" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="MinHeight" Value="30" />
        <Setter Property="MaxHeight" Value="50" />
        <Setter Property="Padding" Value="10 0 0 0" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="BorderBrush" Value="{DynamicResource TextColor}" />

        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="PasswordBox">
                    <Border Name="border"
                        Background="{DynamicResource InputText}"
                        BorderThickness="1"
                        Padding="10 0 0 0"
                        MinHeight="30"
                        MaxHeight="50"
                        CornerRadius="5">
                        <ScrollViewer x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource FocusColor}" />
                            <Setter Property="Foreground" Value="{DynamicResource TextColor}"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource FocusColor}" />
                            <Setter Property="Foreground" Value="{DynamicResource TextColor}"/>

                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource FocusColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="ForgetPassword" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{DynamicResource ThirdTextColor}" />
        <Setter Property="FontSize" Value="10" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Border" Background="Transparent" BorderThickness="1" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="2">
                        <ContentPresenter Margin="2" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="Transparent" />
                            <Setter Property="Foreground" Value="{DynamicResource FocusColor}" />
                            <Setter Property="Cursor" Value="Hand"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>